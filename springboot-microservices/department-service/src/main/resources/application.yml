spring:
  application:
    name: DEPARTMENT-SERVICE

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: 123456!
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        default_schema: department
    open-in-view: false

  flyway:
    enabled: true
    locations: classpath:/db/migration
    schemas: department
    default-schema: department
    table: flyway_schema_history_departments
    create-schemas: true
    baseline-on-migrate: true
    baseline-version: 0
    validate-migration-naming: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: department-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  # Redis Configuration
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes

server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        # circuitbreakers
        include: health,info,prometheus,metrics,circuitbreakers
  # Metrics
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      employeeService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - feign.FeignException
  retry:
    instances:
      employeeService:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - feign.FeignException

logging:
  level:
    com.example.department: DEBUG
    io.github.resilience4j: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/department-service.log