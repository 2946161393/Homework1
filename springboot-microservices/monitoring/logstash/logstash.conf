input {
  file {
    path => "/logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }

  tcp {
    port => 5000
    codec => json
  }
}

filter {
  grok {
    match => {
      "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{GREEDYDATA:log_message}"
    }
  }

  date {
    match => ["timestamp", "yyyy-MM-dd HH:mm:ss"]
    target => "@timestamp"
  }

  if [path] {
    if "employee-service" in [path] {
      mutate { add_field => { "service" => "employee-service" } }
    } else if "department-service" in [path] {
      mutate { add_field => { "service" => "department-service" } }
    } else if "product-service" in [path] {
      mutate { add_field => { "service" => "product-service" } }
    } else if "api-gateway" in [path] {
      mutate { add_field => { "service" => "api-gateway" } }
    } else if "discovery-service" in [path] {
      mutate { add_field => { "service" => "discovery-service" } }
    } else if "config-server" in [path] {
      mutate { add_field => { "service" => "config-server" } }
    }
  }
}

output {
  # Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "microservices-logs-%{+YYYY.MM.dd}"
  }

  stdout {
    codec => rubydebug
  }
}